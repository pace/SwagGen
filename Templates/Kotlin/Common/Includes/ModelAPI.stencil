object {{ type }}API {

    interface {{ type }}Service {
        {% if summary %}
        /* {{ summary }} */
        {% endif %}
        {% if description %}
        /* {{ description }} */
        {% endif %}
        {% if body.optionalType == "Map<String, Any>" %}@JvmSuppressWildcards{% endif %}
        @{{ method|uppercase }}("{% for part in path | split:"/" %}{{ part }}{% ifnot forloop.first %}{% ifnot forloop.last %}/{% endif %}{% endif %}{% endfor %}")
        fun {{ type|lowerCamelCase }}(
            @HeaderMap headers: Map<String, String>,
            {% for param in nonBodyParams %}{% if param.raw.in == "path" or param.raw.in == "query" or param.raw.in == "header"%}{% if not forloop.first%},{% endif %}{% endif %}
            {% if param.description %}
            /* {{ param.description }} */
            {% endif %}{% if param.raw.in == "path" %}@Path("{{ param.value }}") {{ param.name }}: {% if param.optionalType == "Date? = null" %}String? = null{% else %}{{ param.optionalType }}{% endif %}{% elif param.raw.in == "query" %}@Query("{{ param.value }}") {{ param.name }}: {% if param.optionalType == "Date? = null" %}String? = null{% else %}{{ param.optionalType }}{% endif %}{% elif param.raw.in == "header" %}@Header("{{ param.value }}") {{ param.name }}: {% if param.optionalType == "Date? = null" %}String? = null{% else %}{{ param.optionalType }}{% endif %}{% endif %}{% if forloop.last and body or forloop.last and successResponse.schema.raw.type == "object" and successResponse.acceptHeaderEnums.count > 1 %}, {% endif %}{% endfor %}
            {% if successResponse.schema.raw.type == "object" and successResponse.acceptHeaderEnums.count > 1%}@Header("Accept") accept: String? = null{%if body%}, {% endif %}{% endif %}
            {% if body %}
            {% if body.description %}
            /* {{ body.description }} */
            {% endif %}
            @retrofit2.http.Body {{ body.name }}: {{ body.optionalType }}
            {% endif %}
        ): Call<{% if successResponse.schema.properties.first.type %}{{ successResponse.schema.properties.first.type }}{% elif successResponse.schema.type and successResponse.schema.type != "File" %}{{ successResponse.schema.type }}{% else %}ResponseBody{% endif %}>
    }
    {% for enum in requestEnums where not enum.isGlobal %}

        {% filter indent:4 %}{% include "Common/Includes/Enum.stencil" enum %}{% endfilter %}
    {% endfor %}
    {% for schema in requestSchemas %}

        {% filter indent:4 %}{% include "Common/Includes/ModelAPIBodyModel.stencil" schema %}{% endfilter %}
    {% endfor %}

    {% if successResponse.schema.raw.type == "object" and successResponse.acceptHeaderEnums.count > 1 and successResponse.acceptHeaderEnums.count == successResponse.acceptHeaders.count%}
    enum class {{type}}AcceptHeader(val value: String) {
        {% for enum in successResponse.acceptHeaders %}
        {{successResponse.acceptHeaderEnums[forloop.counter0]}}("{{successResponse.acceptHeaders[forloop.counter0]}}"){% ifnot forloop.last %},{% endif %}
            {% endfor %}
    }
    {% endif %}

    open class Request : BaseRequest() {

        fun {{ type|lowerCamelCase }}(
            {% for param in nonBodyParams %}
            {% if param.raw.in == "path" or param.raw.in == "query" or param.raw.in == "header" %}{{ param.name }}: {{ param.optionalType }},{% endif %}
            {% endfor %}
            {% if body %}{{ body.name }}: {{ body.optionalType }},{% endif %}
            readTimeout: Long? = null,
            {% if successResponse.schema.raw.type  == "object" and successResponse.acceptHeaderEnums.count > 1 %}accept: {{type}}AcceptHeader? = null,{% endif %}
            additionalHeaders: Map<String, String>? = null,
            additionalParameters: Map<String, String>? = null
        ): Call<{% if successResponse.schema.properties.first.type %}{{ successResponse.schema.properties.first.type }}{% elif successResponse.schema.type and successResponse.schema.type != "File" %}{{ successResponse.schema.type }}{% else %}ResponseBody{% endif %}> {
            {% if successResponse.resources.count > 0 %}val resources = listOf({% for resource in successResponse.resources %}{{ resource }}::class.java{% ifnot forloop.last %},{% endif %}{% endfor %}){% endif %}
            val headers = headers({% if authorizationRequired == true %}true{% else %}false{% endif %}, {% if successResponse.schema.raw.type == "object" %}"application/vnd.api+json"{% elif contentType %}"{{contentType}}"{% else %}"application/json"{% endif %}, {% if successResponse.schema.raw.type == "object" and successResponse.acceptHeaderEnums.count > 1 %}null{% elif successResponse.schema.raw.type == "object" %}"application/vnd.api+json"{% elif contentType %}"{{contentType}}"{% else %}"application/json"{% endif %}, additionalHeaders)

            return retrofit({{ options.modelProtocol }}.baseUrl, additionalParameters, readTimeout, {% if successResponse.resources.count > 0 %}resources{% endif %})
                .create({{ type|upperCamelCase }}Service::class.java)
                .{{ type|lowerCamelCase }}(
                    headers{% for param in nonBodyParams %},
                    {% if param.raw.in == "path" or param.raw.in == "query" or param.raw.in == "header" %}{% if param.optionalType == "Date? = null" %}{{ param.name }}?.toIso8601()?.dropLast(9)?.let { it +'Z'}{% else %}{{ param.name }}{% endif %}{% endif %}{% endfor %}{% if successResponse.schema.raw.type == "object" and successResponse.acceptHeaderEnums.count > 1 %},
                    accept?.value{% endif %}{% if body %},
                    {{ body.name}}{% endif %}
                )
        }
    }

    fun {{ options.modelProtocol }}.{{ tag|upperCamelCase }}API.{{ type|lowerCamelCase }}(
        {% for param in nonBodyParams %}
        {% if param.raw.in == "path" or param.raw.in == "query" or param.raw.in == "header" %}{{ param.name }}: {{ param.optionalType }},{% endif %}
        {% endfor %}
        {% if body %}{{ body.name}}: {{ body.optionalType }},{% endif %}
        readTimeout: Long? = null,
        {% if successResponse.schema.raw.type  == "object" and successResponse.acceptHeaderEnums.count > 1 %}accept: {{type}}AcceptHeader? = null,{% endif %}
        additionalHeaders: Map<String, String>? = null,
        additionalParameters: Map<String, String>? = null
    ) = Request().{{ type|lowerCamelCase }}(
        {% for param in nonBodyParams %}
        {% if param.raw.in == "path" or param.raw.in == "query" or param.raw.in == "header" %}{{ param.name }},{% endif %}
        {% endfor %}
        {% if body %}{{ body.name }},{% endif %}
        readTimeout,
        {% if successResponse.schema.raw.type  == "object" and successResponse.acceptHeaderEnums.count > 1 %}accept,{% endif %}
        additionalHeaders,
        additionalParameters
    )
}
